// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RehabilitationService.Data;

#nullable disable

namespace RehabilitationService.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250526052026_AddAlertsTable")]
    partial class AddAlertsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RehabilitationService.Models.Exercise", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RehabilitationPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Repetitions")
                        .HasColumnType("int");

                    b.Property<int?>("Sets")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RehabilitationPlanId");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("RehabilitationService.Models.RehabilitationPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RehabilitationPlans");
                });

            modelBuilder.Entity("RehabilitationService.Models.RehabilitationProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FunctionalAbilityScore")
                        .HasColumnType("int");

                    b.Property<int?>("PainLevel")
                        .HasColumnType("int");

                    b.Property<string>("ProgressNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RehabilitationPlanId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RehabilitationPlanId");

                    b.ToTable("RehabilitationProgresses");
                });

            modelBuilder.Entity("RehabilitationService.Models.Exercise", b =>
                {
                    b.HasOne("RehabilitationService.Models.RehabilitationPlan", "RehabilitationPlan")
                        .WithMany("Exercises")
                        .HasForeignKey("RehabilitationPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RehabilitationPlan");
                });

            modelBuilder.Entity("RehabilitationService.Models.RehabilitationProgress", b =>
                {
                    b.HasOne("RehabilitationService.Models.RehabilitationPlan", "RehabilitationPlan")
                        .WithMany("ProgressRecords")
                        .HasForeignKey("RehabilitationPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RehabilitationPlan");
                });

            modelBuilder.Entity("RehabilitationService.Models.RehabilitationPlan", b =>
                {
                    b.Navigation("Exercises");

                    b.Navigation("ProgressRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
